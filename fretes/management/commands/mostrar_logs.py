from django.core.management.base import BaseCommand
import os
import sys

class Command(BaseCommand):
    help = 'Mostra logs do sistema'

    def handle(self, *args, **options):
        self.stdout.write('üìã LOGS DO SISTEMA')
        self.stdout.write('=' * 60)
        
        # 1. Verificar se estamos no Render
        self.stdout.write('\nüåç AMBIENTE:')
        if os.environ.get('RENDER'):
            self.stdout.write('   ‚úÖ Executando no Render')
        else:
            self.stdout.write('   ‚ùå N√ÉO est√° no Render')
        
        # 2. Verificar vari√°veis de ambiente
        self.stdout.write('\nüîß VARI√ÅVEIS DE AMBIENTE:')
        env_vars = ['RENDER', 'PORT', 'PYTHON_VERSION', 'SECRET_KEY', 'DEBUG', 'ALLOWED_HOSTS']
        for var in env_vars:
            value = os.environ.get(var, 'N√ÉO DEFINIDA')
            if var == 'SECRET_KEY' and value != 'N√ÉO DEFINIDA':
                value = f'{value[:10]}...'
            self.stdout.write(f'   {var}: {value}')
        
        # 3. Verificar diret√≥rio atual
        self.stdout.write('\nüìÅ DIRET√ìRIO ATUAL:')
        self.stdout.write(f'   {os.getcwd()}')
        
        # 4. Verificar arquivos importantes
        self.stdout.write('\nüìÑ ARQUIVOS IMPORTANTES:')
        important_files = ['manage.py', 'requirements.txt', 'render.yaml']
        for file in important_files:
            if os.path.exists(file):
                self.stdout.write(f'   ‚úÖ {file}')
            else:
                self.stdout.write(f'   ‚ùå {file} n√£o encontrado')
        
        # 5. Verificar se Django est√° funcionando
        self.stdout.write('\nüêç DJANGO:')
        try:
            import django
            self.stdout.write(f'   Vers√£o: {django.get_version()}')
            self.stdout.write('   ‚úÖ Django importado com sucesso')
        except Exception as e:
            self.stdout.write(f'   ‚ùå Erro ao importar Django: {e}')
        
        # 6. Verificar configura√ß√µes
        self.stdout.write('\n‚öôÔ∏è CONFIGURA√á√ïES:')
        try:
            from django.conf import settings
            self.stdout.write(f'   DEBUG: {settings.DEBUG}')
            self.stdout.write(f'   ALLOWED_HOSTS: {settings.ALLOWED_HOSTS}')
            self.stdout.write(f'   DATABASE: {settings.DATABASES["default"]["ENGINE"]}')
        except Exception as e:
            self.stdout.write(f'   ‚ùå Erro ao verificar configura√ß√µes: {e}')
        
        # 7. Verificar se o servidor est√° rodando
        self.stdout.write('\nüöÄ SERVIDOR:')
        try:
            from django.core.management import execute_from_command_line
            self.stdout.write('   ‚úÖ Django management funcionando')
        except Exception as e:
            self.stdout.write(f'   ‚ùå Erro no Django management: {e}')
        
        self.stdout.write('\n' + '=' * 60)
        self.stdout.write('üèÅ LOGS COMPLETOS!')
