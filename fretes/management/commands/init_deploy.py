from django.core.management.base import BaseCommand
from django.core.management import call_command
import os

class Command(BaseCommand):
    help = 'Comando de inicializa√ß√£o para deploy - executa apenas o necess√°rio'

    def handle(self, *args, **options):
        self.stdout.write('üöÄ INICIALIZA√á√ÉO DO DEPLOY')
        self.stdout.write('=' * 50)
        
        try:
            # 1. Executar migra√ß√µes
            self.stdout.write('üìä Executando migra√ß√µes...')
            call_command('migrate', verbosity=0, interactive=False)
            self.stdout.write('‚úÖ Migra√ß√µes executadas')
            
            # 2. Configurar sess√µes
            self.stdout.write('üîß Configurando sess√µes...')
            try:
                call_command('setup_sessions', verbosity=0)
                self.stdout.write('‚úÖ Sess√µes configuradas')
            except Exception as e:
                self.stdout.write(f'‚ö†Ô∏è Erro ao configurar sess√µes: {e}')
                # Tentar criar tabela de sess√µes manualmente
                from django.db import connection
                with connection.cursor() as cursor:
                    cursor.execute("""
                        CREATE TABLE IF NOT EXISTS django_session (
                            session_key VARCHAR(40) NOT NULL PRIMARY KEY,
                            session_data TEXT NOT NULL,
                            expire_date TIMESTAMP WITH TIME ZONE NOT NULL
                        );
                    """)
                    cursor.execute("CREATE INDEX IF NOT EXISTS django_session_expire_date_idx ON django_session (expire_date);")
                self.stdout.write('‚úÖ Tabela de sess√µes criada manualmente')
            
            # 3. Verificar se precisa de setup
            from django.contrib.auth.models import User
            from fretes.models import Loja, Transportadora
            
            if not (User.objects.filter(username='admin').exists() and 
                    Loja.objects.exists() and 
                    Transportadora.objects.exists()):
                
                self.stdout.write('üîß Executando setup inicial...')
                call_command('setup_completo', verbosity=0)
                self.stdout.write('‚úÖ Setup inicial executado')
            else:
                self.stdout.write('‚úÖ Banco j√° configurado')
            
            # 4. Coletar arquivos est√°ticos (se n√£o foi feito no build)
            if not os.path.exists('staticfiles'):
                self.stdout.write('üìÅ Coletando arquivos est√°ticos...')
                call_command('collectstatic', verbosity=0, interactive=False)
                self.stdout.write('‚úÖ Arquivos est√°ticos coletados')
            
            self.stdout.write(self.style.SUCCESS('üéâ Inicializa√ß√£o conclu√≠da com sucesso!'))
            
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå Erro na inicializa√ß√£o: {e}'))
            # N√£o falhar o deploy por causa de erros de setup
            self.stdout.write('‚ö†Ô∏è Continuando com deploy mesmo com erros...')
